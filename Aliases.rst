Aliases
=======

bash
----

::

	alias ..='cd ..'
	alias ...='cd ../..'
	alias beet_genre_get='beet ls -af '\''$path: $genre'\'''
	alias beet_genre_list='beet ls -f '\''$path:$genre'\'''
	alias beet_unknown='beet ls -ap genre:Unknown'
	alias crins='sudo apt -o Dpkg::Options::=--force-confmiss --reinstall install'
	alias dmesg='sudo /bin/dmesg -T'
	alias ins='sudo apt install'
	alias l='ls -CF'
	alias la='ls -A'
	alias ll='ls -l'
	alias ls='ls --color=auto'
	alias mwine='WINEPREFIX=~/.wine32 WINEARCH=win32 wine'
	alias pol='sudo apt-cache policy'
	alias pur='sudo apt purge'
	alias rins='sudo apt --reinstall install'
	alias rsync-copy='rsync --verbose --progress --human-readable --compress --archive --hard-links --one-file-system'
	alias rsync-move='rsync --verbose --progress --human-readable --compress --archive --hard-links --one-file-system --remove-source-files'
	alias rsync-synchronize='rsync --verbose --progress --human-readable --compress --archive --hard-links --one-file-system --update --delete'
	alias rsync-update='rsync --verbose --progress --human-readable --compress --archive --hard-links --one-file-system --update'
	alias sea='apt-file -l search'
	alias upd='sudo apt update'
	alias upg='sudo apt upgrade'

zsh
----

::

	-='cd -'
	...=../..
	....=../../..
	.....=../../../..
	......=../../../../..
	1='cd -'
	2='cd -2'
	3='cd -3'
	4='cd -4'
	5='cd -5'
	6='cd -6'
	7='cd -7'
	8='cd -8'
	9='cd -9'
	_=sudo
	aac='sudo $apt_pref autoclean'
	abd='sudo $apt_pref build-dep'
	ac='sudo $apt_pref clean'
	acs='apt-cache search'
	ad='sudo $apt_pref update'
	adg='sudo $apt_pref update && sudo $apt_pref $apt_upgr'
	ads='sudo apt-get dselect-upgrade'
	adu='sudo $apt_pref update && sudo $apt_pref dist-upgrade'
	afind='ack -il'
	afs='apt-file search --regexp'
	afu='sudo apt-file update'
	age=apt-get
	ai='sudo $apt_pref install'
	ail='sed -e '\''s/  */ /g'\'' -e '\''s/ *//'\'' | cut -s -d '\'' '\'' -f 1 |  xargs sudo $apt_pref install'
	allpkgs='aptitude search -F "%p" --disable-columns ~i'
	ap='sudo $apt_pref purge'
	api=aptitude
	app='apt-cache policy'
	aps='aptitude search'
	ar='sudo $apt_pref remove'
	as=$'aptitude -F "* %p -> %d \\n(%v/%V)" \t\t--no-gui --disable-columns search'
	asrc='apt-get source'
	au='sudo $apt_pref $apt_upgr'
	d='dirs -v | head -10'
	di='sudo dpkg -i'
	dia='sudo dpkg -i ./*.deb'
	g=git
	ga='git add'
	gaa='git add --all'
	gap='git apply'
	gapa='git add --patch'
	gau='git add --update'
	gav='git add --verbose'
	gb='git branch'
	gba='git branch -a'
	gbd='git branch -d'
	gbda='git branch --no-color --merged | command grep -vE "^(\*|\s*(master|develop|dev)\s*$)" | command xargs -n 1 git branch -d'
	gbl='git blame -b -w'
	gbnm='git branch --no-merged'
	gbr='git branch --remote'
	gbs='git bisect'
	gbsb='git bisect bad'
	gbsg='git bisect good'
	gbsr='git bisect reset'
	gbss='git bisect start'
	gc='git commit -v'
	gc!='git commit -v --amend'
	gca='git commit -v -a'
	gca!='git commit -v -a --amend'
	gcam='git commit -a -m'
	gcan!='git commit -v -a --no-edit --amend'
	gcans!='git commit -v -a -s --no-edit --amend'
	gcb='git checkout -b'
	gcd='git checkout develop'
	gcf='git config --list'
	gcl='git clone --recurse-submodules'
	gclean='git clean -fd'
	gcm='git checkout master'
	gcmsg='git commit -m'
	gcn!='git commit -v --no-edit --amend'
	gco='git checkout'
	gcount='git shortlog -sn'
	gcp='git cherry-pick'
	gcpa='git cherry-pick --abort'
	gcpc='git cherry-pick --continue'
	gcs='git commit -S'
	gcsm='git commit -s -m'
	gd='git diff'
	gdca='git diff --cached'
	gdct='git describe --tags `git rev-list --tags --max-count=1`'
	gdcw='git diff --cached --word-diff'
	gds='git diff --staged'
	gdt='git diff-tree --no-commit-id --name-only -r'
	gdw='git diff --word-diff'
	gf='git fetch'
	gfa='git fetch --all --prune'
	gfo='git fetch origin'
	gg='git gui citool'
	gga='git gui citool --amend'
	ggpull='git pull origin $(git_current_branch)'
	ggpur=ggu
	ggpush='git push origin $(git_current_branch)'
	ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
	ghh='git help'
	gignore='git update-index --assume-unchanged'
	gignored='git ls-files -v | grep "^[[:lower:]]"'
	git-svn-dcommit-push='git svn dcommit && git push github master:svntrunk'
	gk='\gitk --all --branches'
	gke='\gitk --all $(git log -g --pretty=%h)'
	gl='git pull'
	glg='git log --stat'
	glgg='git log --graph'
	glgga='git log --graph --decorate --all'
	glgm='git log --graph --max-count=10'
	glgp='git log --stat -p'
	glo='git log --oneline --decorate'
	glod='git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'
	glods='git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'' --date=short'
	glog='git log --oneline --decorate --graph'
	gloga='git log --oneline --decorate --graph --all'
	glol='git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'
	glola='git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --all'
	glp=_git_log_prettily
	glum='git pull upstream master'
	gm='git merge'
	gma='git merge --abort'
	gmom='git merge origin/master'
	gmt='git mergetool --no-prompt'
	gmtvim='git mergetool --no-prompt --tool=vimdiff'
	gmum='git merge upstream/master'
	gp='git push'
	gpd='git push --dry-run'
	gpoat='git push origin --all && git push origin --tags'
	gpristine='git reset --hard && git clean -dfx'
	gpsup='git push --set-upstream origin $(git_current_branch)'
	gpu='git push upstream'
	gpv='git push -v'
	gr='git remote'
	gra='git remote add'
	grb='git rebase'
	grba='git rebase --abort'
	grbc='git rebase --continue'
	grbd='git rebase develop'
	grbi='git rebase -i'
	grbm='git rebase master'
	grbs='git rebase --skip'
	grep='grep  --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
	grh='git reset'
	grhh='git reset --hard'
	grmv='git remote rename'
	grrm='git remote remove'
	grset='git remote set-url'
	grt='cd $(git rev-parse --show-toplevel || echo ".")'
	gru='git reset --'
	grup='git remote update'
	grv='git remote -v'
	gsb='git status -sb'
	gsd='git svn dcommit'
	gsh='git show'
	gsi='git submodule init'
	gsps='git show --pretty=short --show-signature'
	gsr='git svn rebase'
	gss='git status -s'
	gst='git status'
	gsta='git stash save'
	gstaa='git stash apply'
	gstc='git stash clear'
	gstd='git stash drop'
	gstl='git stash list'
	gstp='git stash pop'
	gsts='git stash show --text'
	gsu='git submodule update'
	gts='git tag -s'
	gtv='git tag | sort -V'
	gunignore='git update-index --no-assume-unchanged'
	gunwip='git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
	gup='git pull --rebase'
	gupv='git pull --rebase -v'
	gwch='git whatchanged -p --abbrev-commit --pretty=medium'
	gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify -m "--wip-- [skip ci]"'
	history=omz_history
	kclean=$'sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \\\n        ?not(~n`uname -r`))'
	l='ls -lah'
	la='ls -lAh'
	ll='ls -lh'
	ls='ls --color=tty'
	lsa='ls -lah'
	md='mkdir -p'
	mydeb='time dpkg-buildpackage -rfakeroot -us -uc'
	please=sudo
	pyfind='find . -name "*.py"'
	pygrep='grep --include="*.py"'
	rd=rmdir
	ta='tmux attach -t'
	tad='tmux attach -d -t'
	tkss='tmux kill-session -t'
	tksv='tmux kill-server'
	tl='tmux list-sessions'
	tmux=_zsh_tmux_plugin_run
	ts='tmux new-session -s'
	which-command=whence
	x=extract

